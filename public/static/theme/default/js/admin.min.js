;$(function(){
    //输入框格式化
    $('.input-format').on('keyup', function(){
        var val = this.value;
        if ($(this).attr('_format_type') == 'money' || $(this).attr('_format_type') == "weight") {
            var regex = /^-{0,1}\d{0,8}(\.\d{0,2})?$/;
            if ($(this).attr('_format_symbol') == 'plus') {
                regex = /^\d{0,8}(\.\d{0,2})?$/;
            }
            if (!regex.test(this.value)) {
                this.value = val.substring(0, val.length - 1);
            }
        } else if ($(this).attr('_format_type') == 'int') {
            if (!/^\d{0,8}$/.test(this.value)) {
                this.value = val.substring(0, val.length - 1);
            }
        }
    }).blur(function(){
        var val = this.value;
        if ($(this).attr('_format_type') == 'money' || $(this).attr('_format_type') == "weight") {
            if (isNaN(val)) {
                this.value = '';return false;
            } else {
                if (/^-{0,1}\d{0,8}(\.\d{2,})$/.test(val)) {
                    val = val.toString().match(/^-{0,1}\d+(?:\.\d{0,2})?/);
                    val = val[0];
                }
                var regex = /^-{0,1}\d{0,8}(\.\d{0,2})?$/;
                if ($(this).attr('_format_symbol') == 'plus') {
                    regex = /^\d{0,8}(\.\d{0,2})?$/;
                }
                if (!regex.test(val)) {
                    this.value = '';
                    return false;
                } else {
                    this.value = val;
                }
            }
        } else if ($(this).attr('_format_type') == 'int') {
            if (isNaN(val)) {
                this.value = '';return false;
            } else {
                if (val) {
                    this.value = parseInt(val);return false;
                }
            }
        }
    });
});
/**
 *格式化
 */
function _format(val, _format_type){
    if (_format_type == 's') {
        //字符串
    } else if (_format_type == 'mille') {
        // 千分格式化100,000,000.00
        
    } else if (_format_type == 'int') {
        //整型 100000000
        val = parseInt(val);
    } else if (_format_type == 'float') {
        val = parseFloat(val);
    }
    return val;
}
/**
 *弹窗
 */
function popup(content, title, widht, height) {
    if (!title) title = '弹窗';
    if (!widht) widht = 800;
    if ($(document).width() < 800) {
        widht = "80%";
    } else {
        if ($(document).width() < 1000) {
            widht = widht + "px";
        } else if ($(document).width() < 1400) {
            widht = '80%';
        } else if ($(document).width() < 1600) {
            widht = '70%';
        } else {
            widht = '1000px';
        }
    }
    if (!height) {
        if ($(document).height() < 500) {
            height = '95%';
        } else if ($(document).height() < 700) {
            height = '90%';
        } else {
            height = '80%';
        }
    }
    layer.open({
        type: 2,
        title: title,
        maxmin:true,
        shadeClose: false,
        shade: 0.8,
        area: [widht, height],
        content: content
    });
}
/**
 *分页
 */
function getpage(obj, count){
    laypage({
        cont: obj, //容器。值支持id名、原生dom对象，jquery对象,
        pages: count, //总页数
        skin: 'molv', //皮肤
        first: 1, //将首页显示为数字1,。若不显示，设置false即可
        last: count, //将尾页显示为总页数。若不显示，设置false即可
        prev: '<', //若不显示，设置false即可
        next: '>', //若不显示，设置false即可
        
        curr: function(){ //通过url获取当前页，也可以同上（pages）方式获取
            var page = location.href.match(/\/list\/(\d+)/);
            return page ? page[1] : 1;
        }(), 
        jump: function(obj, first){ //触发分页后的回调
            if(!first){ //一定要加此判断，否则初始时会无限刷新
                layer.load(0, {shade: [0.1, '#393D49']});
                location.href = location.href.replace(/\/list\/(\d+)/, '/list/'+obj.curr);
            }
        }
    });
}
function oper(url, method, popup){
    layer.confirm('是否执行此操作？', {}, function(){
        var oper_load = layer.load();
        $.ajax({
            url:url,
            type:method,
            dataType:'json',
            success:function(json){
                layer.close(oper_load);
                if (json.code) {
                    parent.parent._toastr('success', json.msg, '成功提示');
                    window.location.reload();
                } else {
                    parent.parent._toastr('error', json.msg, '错误提示');
                }
            },
            error:function(){
                layer.close(oper_load);
                parent.parent._toastr('error', '网络错误', '警告提示');
            }
        });
    });
}




 